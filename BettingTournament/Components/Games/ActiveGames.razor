@using BettingTournament.Components.Common
@using BettingTournament.Core
@using BettingTournament.Core.Models
@using BettingTournament.Core.Services
@inject GameService GameService
@inject IDialogService DialogService
@inject ScoreService ScoreService

<Button OnClick="AddGameClicked">Dodaj Gre</Button>
<MudDataGrid Items="@_bettingGames">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Gry Do Obstawiania</MudText>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x.HomeTeam" Title="Druzyna A" />
        <PropertyColumn Property="x => x.AwayTeam" Title="Druzyna B" />
        <PropertyColumn Property="x => x.DateTimeCEST" Title="Data" Format="dd.MM.yyyy HH:mm:ss" />
        <TemplateColumn>
            <CellTemplate>
                <Button OnClick="() => UpdateClicked(context.Item)">Update</Button>
                <Button Color="Color.Error" OnClick="() => RemoveClicked(context.Item)">Remove</Button>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    private IEnumerable<ActiveGame> _bettingGames = [];

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Refresh();
    }

    private async Task UpdateClicked(ActiveGame game)
    {
        var parameters = new DialogParameters<UpdateGameDialog>()
        {
            { x => x.Game , game},
        };

        var dialog = DialogService.Show<UpdateGameDialog>("", parameters);
        await dialog.Result;
        Refresh();
    }

    private async Task RemoveClicked(ActiveGame game)
    {
        var dialog = DialogService.Show<ConfirmDialog>();
        var result = await dialog.Result;

        if (result.Data is bool val && val)
        {
            GameService.Remove(game.Id);
            Refresh();
        }
    }

    private async Task AddGameClicked()
    {
        var dialog = DialogService.Show<NewGameDialog>();
        await dialog.Result;
        Refresh();
    }

    private void Refresh()
    {
        _bettingGames = GameService.GetActiveGames();
    }
}