@using BettingTournament.Components.Betting
@using BettingTournament.Components.Common
@using BettingTournament.Core
@using BettingTournament.Core.Models
@using BettingTournament.Core.Services
@inject GameService GameService
@inject IDialogService DialogService

<MudContainer>
    <MudDataGrid Items="@_gamesInProgress">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Games In Progress</MudText>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.HomeTeam" />
            <PropertyColumn Property="x => x.AwayTeam" />
            <PropertyColumn Property="x => x.DateTimeCEST" Format="dd.MM.yyyy HH:mm:ss" />
            <TemplateColumn>
                <CellTemplate>
                    <Button OnClick="() => ShowBetsClicked(context.Item)">Show Bets</Button>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</MudContainer>

@code {
    private IEnumerable<ActiveGame> _gamesInProgress = [];

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Refresh();
    }

    private async Task ShowBetsClicked(ActiveGame game)
    {
        var parameters = new DialogParameters<BetsInProgressDialog>()
        {
            { x => x.Game, game }
        };
        var dialog = DialogService.Show<BetsInProgressDialog>("", parameters);
        await dialog.Result;
    }

    private void Refresh()
    {
        _gamesInProgress = GameService.GetGamesInProgress();
    }
}