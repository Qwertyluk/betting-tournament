@using BettingTournament.Components.Common
@using BettingTournament.Core
@using BettingTournament.Core.Models
@using BettingTournament.Core.Services
@inject GameService GameService
@inject ScoreService ScoreService

<MudContainer>
    <MudDataGrid Items="@_archivedGames">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Archived Games</MudText>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.HomeTeam" />
            <PropertyColumn Property="x => x.AwayTeam" />
            <PropertyColumn Property="x => x.HomeTeamScore" />
            <PropertyColumn Property="x => x.AwayTeamScore" />
            <PropertyColumn Property="x => x.PolishDateTime" Format="dd.MM.yyyy HH:mm:ss" />
            <TemplateColumn>
                <CellTemplate>
                    <Button Disabled="context.Item.ScoreCalculated" OnClick="() => CalculateScore(context.Item)">Calculate Score</Button>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</MudContainer>

@code {
    private IEnumerable<ArchivedGame> _archivedGames = [];

    protected override void OnInitialized()
    {
        base.OnInitialized();

        Refresh();
    }

    private void CalculateScore(ArchivedGame game)
    {
        ScoreService.CalculateScoreFor(game.Id);
    }

    private void Refresh()
    {
        _archivedGames = GameService.GetArchivedGames().OrderByDescending(x => x.DateTimeUTC);
    }
}