@using BettingTournament.Components.Betting
@using BettingTournament.Components.Common
@using BettingTournament.Core.Services
@using BettingTournament.ViewModels
@inject ScoreService ScoreService
@inject BetService BetService
@inject IDialogService DialogService
<MudDataGrid Items="@_results" Striped="true">
    <Columns>
        <PropertyColumn Property="x => x.Rank" Title="Pozycja" />
        <PropertyColumn Property="x => x.UserName" Title="Uzytkownik" />
        <PropertyColumn Property="x => x.PersonalData" Title="Imie Nazwisko" />
        <PropertyColumn Property="x => x.Score" Title="Punkty" />
        <TemplateColumn>
            <CellTemplate>
                <Button OnClick="() => HistoryClicked(context.Item)">Historia</Button>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    private IEnumerable<ResultViewModel> _results = [];

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _results = ScoreService.GetScores().OrderByDescending(x => x.Score);
    }

    private async Task HistoryClicked(ResultViewModel model)
    {
        var bets = BetService.GetArchivedBets(model.UserId);

        var parameters = new DialogParameters<ArchivedBetsDialog>()
        {
            { x => x.Bets, bets},
        };

        var dialog = DialogService.Show<ArchivedBetsDialog>("", parameters);
        await dialog.Result;
    }
}
